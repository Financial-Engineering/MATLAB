% Double Barrier via symmetry
function p = doublebarrier_sym(in,cp,S,X,L,U,r,b,sigma,T)

    p =  singlebarrier(1, cp, S, X, U, r, b, sigma, T, T, 0, 0, 1) ...
         + singlebarrier(1, cp, S, X, L, r, b, sigma, T, T, 0, 0, 1) ...
         - X/U * singlebarrier(1, -cp, S, U^2/X, U^2/L, r, b, sigma, T, T, 0, 0, 1) ...
         - X/L * singlebarrier(1, -cp, S, L^2/X, L^2/U, r, b, sigma, T, T, 0, 0, 1) ...
         + U/L * singlebarrier(1, cp, S, L^2*X/U^2, L^3/U^2, r, b, sigma, T, T, 0, 0, 1) ...
         + L/U * singlebarrier(1, cp, S, U^2*X/L^2, U^3/L^2, r, b, sigma, T, T, 0, 0, 1) ...
         - L*X/U^2 * singlebarrier(1, -cp, S, U^4/(L^2*X), U^4/L^3, r, b, sigma, T, T, 0, 0, 1) ...
         - U*X/L^2 * singlebarrier(1, -cp, S, L^4/(U^2*X), L^4/U^3, r, b, sigma, T, T, 0, 0, 1) ...
         + U^2/L^2 * singlebarrier(1, cp, S, L^4*X/U^4, L^5/U^4, r, b, sigma, T, T, 0, 0, 1) ...
         + L^2/U^2 * singlebarrier(1, cp, S, U^4*X/L^4, U^5/L^4, r, b, sigma, T, T, 0, 0, 1);

     van =  blackscholes(cp, S, X, T, T, r, b, sigma);

     p = min(van, p);
 
     if (~in)
         p = van - p;
     end
end


